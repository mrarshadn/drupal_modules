<?php


/**
 * Implements hook_install().
 */
function jobs_install() {
  // Create the "Job Category" content type.
  $job_category_type = array(
    'type' => 'job_category',
    'name' => 'Job Category',
    'base' => 'node_content',
    'description' => 'A content type for job categories.',
    'custom' => 1,
    'locked' => 0,
  );
  node_type_save($job_category_type);

  // Create the "Job Category" vocabulary (taxonomy).
  $vocabulary = array(
    'name' => 'Job Categories',
    'machine_name' => 'job_categories',
    'description' => 'Taxonomy vocabulary for job categories.',
    'module' => 'taxonomy',
  );
  taxonomy_vocabulary_save((object) $vocabulary);

  $vocabulary = taxonomy_vocabulary_load_multiple(NULL, array('machine_name' => 'job_categories'));
  if($vocabulary){
    $vocabulary = reset($vocabulary);
  }

  // Create the "Job Listing" content type.
  $job_listing_type = array(
    'type' => 'job_listing',
    'name' => 'Job Listing',
    'base' => 'node_content',
    'description' => 'A content type for job listings.',
    'custom' => 1,
    'locked' => 0,
  );
  node_type_save($job_listing_type);

  // Define fields for the "Job Listing" content type.
  $fields = array(

    // Description field.
    'job_description' => array(
      'field_name' => 'job_description',
      'type' => 'text_long',
    ),

    // Location field.
    'job_location' => array(
      'field_name' => 'job_location',
      'type' => 'text',
    ),

    // Company Name field.
    'company_name' => array(
      'field_name' => 'company_name',
      'type' => 'text',
    ),

    // Application Deadline field.
    'application_deadline' => array(
      'field_name' => 'application_deadline',
      'type' => 'text',
    ),

    // Date posted field.
    'date_posted' => array(
      'field_name' => 'date_posted',
      'type' => 'text',
    ),
    'job_category' => array(
      'field_name' => 'job_category',
      'type' => 'entityreference',
      'settings' => array(
        'target_type' => 'taxonomy_term',
        'handler' => 'base',
        'handler_settings' => array(
          'target_bundles' => array('job_categories'),
          'sort' => array(
            'field' => 'title',
            'direction' => 'ASC',
          ),
          'behaviors'=>[
            'taxonomy-index'=>['status'=>1],
            'views-select-list'=>[
              'status'=>1
            ],
          ],
          'auto_create' => 1,
        ),
      ),
      'settings_edit_form'=>array(
        'settings'=>['bypass_access'=>1]
      )
    ),
  );

  // Attach fields to the "Job Listing" content type.
  foreach ($fields as $field_name => $field) {
    field_create_field($field);
    $instance = array(
      'field_name' => $field_name,
      'entity_type' => 'node',
      'bundle' => 'job_listing',
      'label' => ucfirst(str_replace('_', ' ', $field_name)),
      'widget' => array(
        'type' => (($field_name =='job_category') ? 'options_select' : 'text_textfield'),
      ),
      'display' => array(
        'default' => array(
          'type' => 'text_default',
        ),
      ),
    );
    field_create_instance($instance);
  }



for($i=1; $i<5; $i++){
  $term = (object) array(
    'name' => 'Category '.$i,
    'description' => 'This is job Category '.$i,
    'vid' => $vocabulary->vid,
  );

  taxonomy_term_save($term);
}

  $field = array(
    'field_name' => 'job_categories',
    'type' => 'taxonomy_term_reference',
    'bundle' => 'job_listing',
    'settings' => array(
      'allowed_values' => array(
        array(
          'vocabulary' => 'job_categories',
          'parent' => 0
        ),
    ),
  ),
);

field_create_field($field);


//  // Create a term reference field for the "Job Listing" content type to link to the "Job Category" vocabulary.
//  $instance = array(
//    'field_name' => $vocabulary->name,
//    'entity_type' => 'node',
//    'bundle' => 'job_listing',
//    'label' => 'Job Category',
//    'description' => 'Select the category for this job listing.',
//    'widget' => array(
//      'type' => 'taxonomy_autocomplete',
//    ),
//    'settings' => array(
//      'autocomplete_match' => 'contains',
//    ),
//  );
//  field_create_instance($instance);

  // Assign permissions.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access_content'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access_content', 'create_job', 'edit_job', 'delete_job'));

  cache_clear_all();
  // Return a message to inform the user that the installation was successful.
  return 'The "Jobs" module has been installed successfully.';

}

/**
 * Implements hook_uninstall().
 */
function jobs_uninstall() {
  // Delete the content types.
  node_type_delete('job_listing');
  node_type_delete('job_category');

  $voc_jc = taxonomy_vocabulary_load_multiple(NULL, array('machine_name' => 'job_categories'));
  if($voc_jc){
    $voc_jc = reset($voc_jc);
    taxonomy_vocabulary_delete($voc_jc->vid);
  }
}

/**
 * Implements hook_views_default_views().
 */
function jobs_views_default_views() {
  $views = [];

  $view = new view();
  $view->name = 'jobs_view';
  $view->description = '';
  $view->tag = 'default';
  $view->base_table = 'node';
  $view->human_name = 'Jobs_view';
  $view->core = 7;
  $view->api_version = '3.0';
  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

  /* Display: Master */
  $handler = $view->new_display('default', 'Master', 'default');
  $handler->display->display_options['title'] = 'Jobs_view';
  $handler->display->display_options['use_more_always'] = FALSE;
  $handler->display->display_options['access']['type'] = 'none';
  $handler->display->display_options['cache']['type'] = 'none';
  $handler->display->display_options['query']['type'] = 'views_query';
  $handler->display->display_options['exposed_form']['type'] = 'basic';
  $handler->display->display_options['pager']['type'] = 'full';
  $handler->display->display_options['pager']['options']['items_per_page'] = '10';
  $handler->display->display_options['style_plugin'] = 'default';
  $handler->display->display_options['row_plugin'] = 'fields';
  /* Field: Content: Title */
  $handler->display->display_options['fields']['title']['id'] = 'title';
  $handler->display->display_options['fields']['title']['table'] = 'node';
  $handler->display->display_options['fields']['title']['field'] = 'title';
  $handler->display->display_options['fields']['title']['label'] = '';
  $handler->display->display_options['fields']['title']['alter']['word_boundary'] = FALSE;
  $handler->display->display_options['fields']['title']['alter']['ellipsis'] = FALSE;
  /* Field: Content: Application deadline */
  $handler->display->display_options['fields']['application_deadline']['id'] = 'application_deadline';
  $handler->display->display_options['fields']['application_deadline']['table'] = 'field_data_application_deadline';
  $handler->display->display_options['fields']['application_deadline']['field'] = 'application_deadline';
  /* Field: Content: Company name */
  $handler->display->display_options['fields']['company_name']['id'] = 'company_name';
  $handler->display->display_options['fields']['company_name']['table'] = 'field_data_company_name';
  $handler->display->display_options['fields']['company_name']['field'] = 'company_name';
  /* Field: Content: Date posted */
  $handler->display->display_options['fields']['date_posted']['id'] = 'date_posted';
  $handler->display->display_options['fields']['date_posted']['table'] = 'field_data_date_posted';
  $handler->display->display_options['fields']['date_posted']['field'] = 'date_posted';
  /* Field: Content: Job description */
  $handler->display->display_options['fields']['job_description']['id'] = 'job_description';
  $handler->display->display_options['fields']['job_description']['table'] = 'field_data_job_description';
  $handler->display->display_options['fields']['job_description']['field'] = 'job_description';
  /* Field: Content: Job location */
  $handler->display->display_options['fields']['job_location']['id'] = 'job_location';
  $handler->display->display_options['fields']['job_location']['table'] = 'field_data_job_location';
  $handler->display->display_options['fields']['job_location']['field'] = 'job_location';
  /* Field: Content: Job category */
  $handler->display->display_options['fields']['job_category']['id'] = 'job_category';
  $handler->display->display_options['fields']['job_category']['table'] = 'field_data_job_category';
  $handler->display->display_options['fields']['job_category']['field'] = 'job_category';
  $handler->display->display_options['fields']['job_category']['settings'] = array(
    'bypass_access' => 0,
    'link' => 0,
  );
  /* Filter criterion: Content: Published status */
  $handler->display->display_options['filters']['status']['id'] = 'status';
  $handler->display->display_options['filters']['status']['table'] = 'node';
  $handler->display->display_options['filters']['status']['field'] = 'status';
  $handler->display->display_options['filters']['status']['value'] = 1;
  $handler->display->display_options['filters']['status']['group'] = 1;
  $handler->display->display_options['filters']['status']['expose']['operator'] = FALSE;
  /* Filter criterion: Content: Type */
  $handler->display->display_options['filters']['type']['id'] = 'type';
  $handler->display->display_options['filters']['type']['table'] = 'node';
  $handler->display->display_options['filters']['type']['field'] = 'type';
  $handler->display->display_options['filters']['type']['value'] = array(
    'job_listing' => 'job_listing',
  );
  $handler->display->display_options['filters']['type']['group'] = 1;
  /* Filter criterion: Content: Title */
  $handler->display->display_options['filters']['title']['id'] = 'title';
  $handler->display->display_options['filters']['title']['table'] = 'node';
  $handler->display->display_options['filters']['title']['field'] = 'title';
  $handler->display->display_options['filters']['title']['operator'] = 'word';
  $handler->display->display_options['filters']['title']['group'] = 1;
  $handler->display->display_options['filters']['title']['exposed'] = TRUE;
  $handler->display->display_options['filters']['title']['expose']['operator_id'] = 'title_op';
  $handler->display->display_options['filters']['title']['expose']['label'] = 'Title';
  $handler->display->display_options['filters']['title']['expose']['operator'] = 'title_op';
  $handler->display->display_options['filters']['title']['expose']['identifier'] = 'title';

  /* Filter criterion: Content: Job description (job_description) */
  $handler->display->display_options['filters']['job_description_value']['id'] = 'job_description_value';
  $handler->display->display_options['filters']['job_description_value']['table'] = 'field_data_job_description';
  $handler->display->display_options['filters']['job_description_value']['field'] = 'job_description_value';
  $handler->display->display_options['filters']['job_description_value']['group'] = 1;
  $handler->display->display_options['filters']['job_description_value']['exposed'] = TRUE;
  $handler->display->display_options['filters']['job_description_value']['expose']['operator_id'] = 'job_description_value_op';
  $handler->display->display_options['filters']['job_description_value']['expose']['label'] = 'Job description (job_description)';
  $handler->display->display_options['filters']['job_description_value']['expose']['operator'] = 'job_description_value_op';
  $handler->display->display_options['filters']['job_description_value']['expose']['identifier'] = 'job_description_value';

  /* Filter criterion: Content: Job category (job_category) */
  $handler->display->display_options['filters']['job_category_target_id']['id'] = 'job_category_target_id';
  $handler->display->display_options['filters']['job_category_target_id']['table'] = 'field_data_job_category';
  $handler->display->display_options['filters']['job_category_target_id']['field'] = 'job_category_target_id';
  $handler->display->display_options['filters']['job_category_target_id']['group'] = 1;
  $handler->display->display_options['filters']['job_category_target_id']['exposed'] = TRUE;
  $handler->display->display_options['filters']['job_category_target_id']['expose']['operator_id'] = 'job_category_target_id_op';
  $handler->display->display_options['filters']['job_category_target_id']['expose']['label'] = 'Job category (job_category)';
  $handler->display->display_options['filters']['job_category_target_id']['expose']['operator'] = 'job_category_target_id_op';
  $handler->display->display_options['filters']['job_category_target_id']['expose']['identifier'] = 'job_category_target_id';
  $handler->display->display_options['filters']['job_category_target_id']['expose']['multiple'] = TRUE;


  /* Display: Page */
  $handler = $view->new_display('page', 'Page', 'page');
  $handler->display->display_options['path'] = 'jobs-view';


  $views['listing'] = $view;
  return $views;
}
